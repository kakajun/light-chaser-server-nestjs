name: Deploy to Alibaba Cloud

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx (if needed)
        uses: docker/setup-buildx-action@v2
        if: false  # 如果不需要 multi-platform builds, 可以省略此步骤

      - name: Login to Alibaba Cloud Container Registry
        run: |
          echo "${{ secrets.ALIYUN_DOCKER_PASSWORD }}" | docker login --username ${{ secrets.ALIYUN_DOCKER_USERNAME }} --password-stdin crpi-nrc1eylr425ubrzn.cn-hangzhou.personal.cr.aliyuncs.com

      - name: Build Docker image
        run: docker build -t crpi-nrc1eylr425ubrzn.cn-hangzhou.personal.cr.aliyuncs.com/kakajun/light-chaser-server-nestjs:latest .

      - name: Push Docker image
        run: docker push crpi-nrc1eylr425ubrzn.cn-hangzhou.personal.cr.aliyuncs.com/kakajun/light-chaser-server-nestjs:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e  # 确保任何命令失败都会终止脚本

            echo "Logging into Alibaba Cloud Docker registry..."
            docker login --username ${{ secrets.ALIYUN_DOCKER_USERNAME }} --password ${{ secrets.ALIYUN_DOCKER_PASSWORD }} crpi-nrc1eylr425ubrzn.cn-hangzhou.personal.cr.aliyuncs.com

            echo "Pulling latest Docker image..."
            docker pull crpi-nrc1eylr425ubrzn.cn-hangzhou.personal.cr.aliyuncs.com/kakajun/light-chaser-server-nestjs:latest

            echo "Stopping and removing existing container if exists..."
            docker ps -q --filter "name=light-chaser-server" | grep -q . && docker stop light-chaser-server || echo "Container light-chaser-server is not running"
            docker ps -a -q --filter "name=light-chaser-server" | grep -q . && docker rm light-chaser-server || echo "Container light-chaser-server does not exist"

            echo "Checking and freeing port 3000 if occupied..."
            docker ps -q --filter "publish=3000" | grep -q . && \
              docker ps -q --filter "publish=3000" | xargs -I {} docker stop {} && \
              docker ps -a -q --filter "publish=3000" | xargs -I {} docker rm {} || echo "Port 3000 is not occupied"

            echo "Running new container..."
            docker run -d --name light-chaser-server -p 3000:3000 crpi-nrc1eylr425ubrzn.cn-hangzhou.personal.cr.aliyuncs.com/kakajun/light-chaser-server-nestjs:latest

            echo "Deployment completed successfully."
